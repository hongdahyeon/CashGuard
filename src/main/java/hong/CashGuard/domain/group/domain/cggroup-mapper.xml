<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hong.CashGuard.domain.group.domain.CgGroupMapper">

    <insert id="insert" parameterType="CgGroup">
        /* cgGroup.insert */
        INSERT INTO CASH_GUARD.CG_GROUP (
             USER_UID
            ,GROUP_NM
            ,IS_PRIVATE
            ,REG_UID
            ,REG_DT
            ,UPDT_UID
            ,UPDT_DT
        ) VALUES (
             #{userUid}
            ,#{groupNm}
            ,#{isPrivate}
            ,#{regUid}
            ,NOW()
            ,#{updtUid}
            ,NOW()
        )
    </insert>

    <select id="view" parameterType="Long" resultType="CgGroup">
        /* cgGroup.view */
        SELECT UID
              ,USER_UID
              ,GROUP_NM
              ,IS_PRIVATE
          FROM CASH_GUARD.CG_GROUP
         WHERE UID = #{uid}
    </select>

    <update id="update" parameterType="CgGroup">
        /* cgGroup.update */
        UPDATE CASH_GUARD.CG_GROUP
           SET GROUP_NM = #{groupNm}
              ,IS_PRIVATE = #{isPrivate}
              ,UPDT_UID = #{updtUid}
              ,UPDT_DT = NOW()
         WHERE UID = #{uid}
    </update>

    <select id="page" parameterType="CgGroupParam" resultType="CgGroupList">
        /* cgGroup.page */
        SELECT CGGROUP.UID
              ,CGGROUP.USER_UID
              ,CU_MASTER.USER_NM AS USER_NM
              ,CGGROUP.GROUP_NM
              ,CGGROUP.IS_PRIVATE
              ,( SELECT COUNT(*)
                   FROM CASH_GUARD.CG_GROUP_MEMBER CM
                  WHERE CM.GROUP_UID = CGGROUP.UID
                    AND CM.IS_APPROVED = 'Y' ) AS APPROVED_MEMBER
              ,( SELECT COUNT(*)
                   FROM CASH_GUARD.CG_GROUP_MEMBER CM2
                  WHERE CM2.GROUP_UID = CGGROUP.UID ) AS TOTAL_MEMBER
              ,CGGROUP.REG_UID
              ,CGGROUP.REG_DT AS REG_DT
              ,CU_REG.USER_NM AS REG_NM
              ,CGGROUP.UPDT_UID
              ,CGGROUP.UPDT_DT AS UPDT_DT
              ,CU_UPDT.USER_NM AS UPDT_NM
          FROM CASH_GUARD.CG_GROUP CGGROUP
         INNER JOIN CASH_GUARD.CG_USER CU_MASTER ON CU_MASTER.UID = CGGROUP.USER_UID
          LEFT JOIN CASH_GUARD.CG_USER CU_REG ON CU_REG.UID = CGGROUP.REG_UID
          LEFT JOIN CASH_GUARD.CG_USER CU_UPDT ON CU_UPDT.UID = CGGROUP.UPDT_UID
         WHERE 1 = 1
        <if test="isPrivate != null and isPrivate != ''">
           AND CGGROUP.IS_PRIVATE = #{isPrivate}
        </if>
        <if test="groupNm != null and groupNm != ''">
           AND CGGROUP.GROUP_NM = #{groupNm}
        </if>
         ORDER BY CGGROUP.REG_DT DESC
        <if test="startNumber != null and endNumber != null">
         LIMIT #{endNumber} OFFSET #{startNumber}
        </if>
    </select>

    <select id="count" resultType="int" parameterType="CgGroupParam">
        /* cgGroup.count */
        SELECT COUNT(*)
          FROM CASH_GUARD.CG_GROUP CGGROUP
         INNER JOIN CASH_GUARD.CG_USER CU_MASTER ON CU_MASTER.UID = CGGROUP.USER_UID
          LEFT JOIN CASH_GUARD.CG_USER CU_REG ON CU_REG.UID = CGGROUP.REG_UID
          LEFT JOIN CASH_GUARD.CG_USER CU_UPDT ON CU_UPDT.UID = CGGROUP.UPDT_UID
         WHERE 1 = 1
        <if test="isPrivate != null and isPrivate != ''">
           AND CGGROUP.IS_PRIVATE = #{isPrivate}
        </if>
        <if test="groupNm != null and groupNm != ''">
           AND CGGROUP.GROUP_NM = #{groupNm}
        </if>
    </select>

    <select id="list" parameterType="CgGroupParam" resultType="CgGroupList">
        /* cgGroup.page */
        SELECT CGGROUP.UID
              ,CGGROUP.USER_UID
              ,CU_MASTER.USER_NM AS USER_NM
              ,CGGROUP.GROUP_NM
              ,CGGROUP.IS_PRIVATE
              ,( SELECT COUNT(*)
                   FROM CASH_GUARD.CG_GROUP_MEMBER CM
                  WHERE CM.GROUP_UID = CGGROUP.UID
                    AND CM.IS_APPROVED = 'Y' ) AS APPROVED_MEMBER
              ,( SELECT COUNT(*)
                   FROM CASH_GUARD.CG_GROUP_MEMBER CM2
                  WHERE CM2.GROUP_UID = CGGROUP.UID ) AS TOTAL_MEMBER
              ,CGGROUP.REG_UID
              ,CGGROUP.REG_DT AS REG_DT
              ,CU_REG.USER_NM AS REG_NM
              ,CGGROUP.UPDT_UID
              ,CGGROUP.UPDT_DT AS UPDT_DT
              ,CU_UPDT.USER_NM AS UPDT_NM
          FROM CASH_GUARD.CG_GROUP CGGROUP
         INNER JOIN CASH_GUARD.CG_USER CU_MASTER ON CU_MASTER.UID = CGGROUP.USER_UID
          LEFT JOIN CASH_GUARD.CG_USER CU_REG ON CU_REG.UID = CGGROUP.REG_UID
          LEFT JOIN CASH_GUARD.CG_USER CU_UPDT ON CU_UPDT.UID = CGGROUP.UPDT_UID
         WHERE 1 = 1
        <if test="isPrivate != null and isPrivate != ''">
           AND CGGROUP.IS_PRIVATE = #{isPrivate}
        </if>
        <if test="groupNm != null and groupNm != ''">
           AND CGGROUP.GROUP_NM = #{groupNm}
        </if>
         ORDER BY CGGROUP.REG_DT DESC
    </select>

    <select id="getAllGroupMember" parameterType="Long" resultType="CgGroupMemberList">
        /* cgGroup.getAllGroupMember */
        SELECT CU.UID AS USER_UID
              ,CU.USER_ID AS USER_ID
              ,CU.USER_NM AS USER_NM
              ,CU.USER_TEL AS USER_TEL
              ,CU.USER_EMAIL AS USER_EMAIL
              ,CGM.JOIN_DT AS JOIN_DT
              ,CGM.IS_APPROVED AS IS_APPROVED
              ,CGM.APPROVED_DT AS APPROVED_DT
              ,CGM.JOIN_TYPE
              ,CASE WHEN CGM.JOIN_TYPE = 'APPLY' THEN '신청'
                    WHEN CGM.JOIN_TYPE = 'INVITE' THEN '초대'
                     END AS JOIN_TYPE_NM
          FROM CASH_GUARD.CG_GROUP CGG
          LEFT JOIN CASH_GUARD.CG_GROUP_MEMBER CGM ON CGM.GROUP_UID = CGG.UID
         INNER JOIN CASH_GUARD.CG_USER CU ON CU.UID = CGM.USER_UID
         WHERE CGG.UID = #{groupUid}
    </select>

    <insert id="insertMember" parameterType="CgGroupMember">
        /* cgGroup.insertMember */
        INSERT INTO CASH_GUARD.CG_GROUP_MEMBER (
             USER_UID
            ,GROUP_UID
            ,JOIN_TYPE
            ,JOIN_DT
            ,IS_APPROVED
        ) VALUES (
             #{userUid}
            ,#{groupUid}
            ,#{joinType}
            ,NOW()
            ,#{isApproved}
        )
    </insert>

    <update id="approveMember" parameterType="CgGroupMember">
        /* cgGroup.CgGroupMember */
        UPDATE CASH_GUARD.CG_GROUP_MEMBER
           SET IS_APPROVED = #{isApproved}
              ,APPROVED_DT = NOW()
         WHERE USER_UID = #{userUid}
           AND GROUP_UID = #{groupUid}
    </update>

    <select id="checkIfExist" parameterType="map" resultType="int">
        /* cgGroup.checkIfExist */
        SELECT COUNT(*)
          FROM CASH_GUARD.CG_GROUP_MEMBER
         WHERE USER_UID = #{userUid}
           AND GROUP_UID = #{groupUid}
    </select>

    <select id="getLoginUsersGroup" resultType="CgGroupAndMemberList" parameterType="Long">
        /* cgGroup.getLoginUsersGroup */
        SELECT CGGROUP.UID
              ,CGGROUP.USER_UID
              ,CU_MASTER.USER_NM AS USER_NM
              ,CGGROUP.GROUP_NM
              ,CGGROUP.IS_PRIVATE
              ,( SELECT COUNT(*)
                 FROM CASH_GUARD.CG_GROUP_MEMBER CM
                 WHERE CM.GROUP_UID = CGGROUP.UID
                   AND CM.IS_APPROVED = 'Y' ) AS APPROVED_MEMBER
              ,( SELECT COUNT(*)
                 FROM CASH_GUARD.CG_GROUP_MEMBER CM2
                 WHERE CM2.GROUP_UID = CGGROUP.UID ) AS TOTAL_MEMBER
              ,CGGROUP.REG_UID
              ,CGGROUP.REG_DT AS REG_DT
              ,CU_REG.USER_NM AS REG_NM
              ,CGGROUP.UPDT_UID
              ,CGGROUP.UPDT_DT AS UPDT_DT
              ,CU_UPDT.USER_NM AS UPDT_NM
          FROM CASH_GUARD.CG_GROUP CGGROUP
         INNER JOIN CASH_GUARD.CG_USER CU_MASTER ON CU_MASTER.UID = CGGROUP.USER_UID
          LEFT JOIN CASH_GUARD.CG_USER CU_REG ON CU_REG.UID = CGGROUP.REG_UID
          LEFT JOIN CASH_GUARD.CG_USER CU_UPDT ON CU_UPDT.UID = CGGROUP.UPDT_UID
         WHERE CGGROUP.USER_UID = #{userUid}
    </select>
</mapper>